Git:
1.初始化Git仓库:git init
2.添加：git add
3.提交:git comit
4.工作区的状态:git status
5.查看修改内容:git diff
6.直接丢弃工作区的修改:git checkout -- file
7.添加到了暂存区时，想丢弃修改:先用git reset HEAD file  再用git checkout -- file
8.删除文件：git rm
9.删错了：git checkout -- file
10.关联仓库:git remote add origin git@github.com:yxyxx/learngit.git
11.本地库的所有内容推送到远程库上:git push origin master
12.克隆一个本地库:git clone git@github.com:yxyxx/gitskills.git
13.创建dev分支，然后切换到dev分支:git checkout -b dev
14.查看当前分支:git branch
15.dev分支的工作成果合并到master分支:git merge dev
16.删除dev分支:git branch -d dev
17.把当前工作现场“储藏”起来:git stash
18.把当前工作现场“恢复“：git stash pop
19.强行删除:git branch -D feature-vulcan
20.打一个新标签:git tag <name>
21.查看所有标签：git tag
22.远程删除标签:git push origin :refs/tags/v0.9
 
Maven:
1.创建一个简单的Java工程：mvn archetype:create -DgroupId=com.mycompany.example -DartifactId=Example
2.创 建一个java的web工程：mvn archetype:create -DarchetypeGroupId=org.apache.maven.archetypes -DarchetypeArtifactId=maven-archetype-webapp -DgroupId=com.mycompany.app -DartifactId=my-webapp
3. 编译源代码： mvn compile 
4. 编译测试代码：mvn test-compile    
5. 运行测试：mvn test   
6. 产生site：mvn site   
7. 打包：mvn package   
8. 在本地Repository中安装jar：mvn install 
9. 清除产生的项目：mvn clean   
10. 生成eclipse项目：mvn eclipse:eclipse  
11. 生成idea项目：mvn idea:idea  
12. 组合使用goal命令，如只打包不测试：mvn -Dtest package   
13. 编译测试的内容：mvn test-compile  
14. 只打jar包: mvn jar:jar  